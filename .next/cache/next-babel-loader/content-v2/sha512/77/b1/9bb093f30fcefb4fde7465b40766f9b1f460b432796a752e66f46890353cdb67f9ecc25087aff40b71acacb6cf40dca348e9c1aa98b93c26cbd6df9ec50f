{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/frivolta/Sites/Apps/rivoltafilippo-next/components/Button/button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport ButtonStyle from \"./button.style\";\n\nconst Button = (_ref) => {\n  let {\n    type,\n    title,\n    icon,\n    disabled,\n    iconPosition,\n    onClick,\n    loader,\n    isLoading,\n    className,\n    fullwidth,\n    style\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"type\", \"title\", \"icon\", \"disabled\", \"iconPosition\", \"onClick\", \"loader\", \"isLoading\", \"className\", \"fullwidth\", \"style\"]);\n\n  // Add all classs to an array\n  const addAllClasses = [\"button\"]; // isLoading prop checking\n\n  if (disabled) {\n    addAllClasses.push(\"disabled\");\n  }\n\n  if (isLoading) {\n    addAllClasses.push(\"is-loading\");\n  } // className prop checking\n\n\n  if (className) {\n    addAllClasses.push(className);\n  } // Checking button loading state\n\n\n  const buttonIcon = isLoading == true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loader ? loader : \"loading....\"\n  }, void 0, false) : icon && /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"btn-icon\",\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 15\n  }, this); // set icon position\n\n  const position = iconPosition || \"right\";\n\n  const LoadingIcon = () => {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"20\",\n      height: \"20\",\n      viewBox: \"0 0 100 100\",\n      className: \"loading-icon\",\n      style: {\n        marginLeft: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"50\",\n        cy: \"50\",\n        fill: \"none\",\n        \"ng-attr-stroke\": \"{{config.color}}\",\n        \"ng-attr-stroke-width\": \"{{config.width}}\",\n        \"ng-attr-r\": \"{{config.radius}}\",\n        \"ng-attr-stroke-dasharray\": \"{{config.dasharray}}\",\n        stroke: \"#ffffff\",\n        strokeWidth: \"10\",\n        r: \"35\",\n        strokeDasharray: \"164.93361431346415 56.97787143782138\",\n        transform: \"rotate(196.993 50 50)\",\n        children: /*#__PURE__*/_jsxDEV(\"animateTransform\", {\n          attributeName: \"transform\",\n          type: \"rotate\",\n          calcMode: \"linear\",\n          values: \"0 50 50;360 50 50\",\n          keyTimes: \"0;1\",\n          dur: \"1s\",\n          begin: \"0s\",\n          repeatCount: \"indefinite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ButtonStyle, _objectSpread(_objectSpread({\n    type: type,\n    className: addAllClasses.join(\" \"),\n    disabled: disabled,\n    \"icon-position\": position,\n    onClick: onClick,\n    fullwidth: fullwidth,\n    style: style\n  }, props), {}, {\n    children: [position === \"left\" && buttonIcon, title && !isLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"btn-text\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 31\n    }, this), position === \"right\" && buttonIcon, isLoading && /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\nButton.defaultProps = {\n  disabled: false,\n  isLoading: false,\n  type: \"button\"\n};\nexport default Button;","map":{"version":3,"sources":["/home/frivolta/Sites/Apps/rivoltafilippo-next/components/Button/button.tsx"],"names":["React","ButtonStyle","Button","type","title","icon","disabled","iconPosition","onClick","loader","isLoading","className","fullwidth","style","props","addAllClasses","push","buttonIcon","position","LoadingIcon","marginLeft","join","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport ButtonStyle from \"./button.style\"\r\n\r\ntype ButtonProps = {\r\n  title: string\r\n  icon?: React.ReactNode\r\n  disabled?: boolean\r\n  onClick?: (e: any) => void\r\n  loader?: Object\r\n  isLoading?: boolean\r\n  className?: string\r\n  fullwidth?: boolean\r\n  style?: any\r\n  type?: \"button\" | \"submit\" | \"reset\"\r\n  iconPosition?: \"left\" | \"right\"\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  type,\r\n  title,\r\n  icon,\r\n  disabled,\r\n  iconPosition,\r\n  onClick,\r\n  loader,\r\n  isLoading,\r\n  className,\r\n  fullwidth,\r\n  style,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses: string[] = [\"button\"]\r\n\r\n  // isLoading prop checking\r\n  if (disabled) {\r\n    addAllClasses.push(\"disabled\")\r\n  }\r\n\r\n  if (isLoading) {\r\n    addAllClasses.push(\"is-loading\")\r\n  }\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className)\r\n  }\r\n\r\n  // Checking button loading state\r\n  const buttonIcon =\r\n    isLoading == true ? (\r\n      <>{loader ? loader : \"loading....\"}</>\r\n    ) : (\r\n      icon && <span className=\"btn-icon\">{icon}</span>\r\n    )\r\n\r\n  // set icon position\r\n  const position: string = iconPosition || \"right\"\r\n\r\n  const LoadingIcon = () => {\r\n    return (\r\n      <svg\r\n        width=\"20\"\r\n        height=\"20\"\r\n        viewBox=\"0 0 100 100\"\r\n        className=\"loading-icon\"\r\n        style={{ marginLeft: 5 }}\r\n      >\r\n        <circle\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          fill=\"none\"\r\n          ng-attr-stroke=\"{{config.color}}\"\r\n          ng-attr-stroke-width=\"{{config.width}}\"\r\n          ng-attr-r=\"{{config.radius}}\"\r\n          ng-attr-stroke-dasharray=\"{{config.dasharray}}\"\r\n          stroke=\"#ffffff\"\r\n          strokeWidth=\"10\"\r\n          r=\"35\"\r\n          strokeDasharray=\"164.93361431346415 56.97787143782138\"\r\n          transform=\"rotate(196.993 50 50)\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            calcMode=\"linear\"\r\n            values=\"0 50 50;360 50 50\"\r\n            keyTimes=\"0;1\"\r\n            dur=\"1s\"\r\n            begin=\"0s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ButtonStyle\r\n      type={type}\r\n      className={addAllClasses.join(\" \")}\r\n      disabled={disabled}\r\n      icon-position={position}\r\n      onClick={onClick}\r\n      fullwidth={fullwidth}\r\n      style={style}\r\n      {...props}\r\n    >\r\n      {position === \"left\" && buttonIcon}\r\n      {title && !isLoading && <span className=\"btn-text\">{title}</span>}\r\n      {position === \"right\" && buttonIcon}\r\n      {isLoading && <LoadingIcon />}\r\n    </ButtonStyle>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  isLoading: false,\r\n  type: \"button\",\r\n}\r\n\r\nexport default Button\r\n"]},"metadata":{},"sourceType":"module"}