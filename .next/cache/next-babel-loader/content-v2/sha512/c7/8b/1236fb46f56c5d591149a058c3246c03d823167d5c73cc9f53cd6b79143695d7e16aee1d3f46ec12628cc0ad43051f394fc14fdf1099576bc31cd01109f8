{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/frivolta/Sites/Apps/rivoltafilippo-next/components/Navbar/MobileMenu.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext } from \"react\";\nimport { MobileMenuWrapper, DrawerContentWrapper, DrawerHead, DrawerLogo, DrawerClose, HamburgerIcon } from \"./navbar.style\";\nimport { FiX } from \"react-icons/fi\";\nimport Drawer from \"../Drawer/drawer\";\nimport { DrawerContext } from \"../Drawer/drawerContext\";\nimport Link from \"next/link\";\nimport Menu from \"./Menu\";\n\nconst MobileMenu = (_ref) => {\n  let {\n    items,\n    logo\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"items\", \"logo\"]);\n\n  const {\n    state,\n    dispatch\n  } = useContext(DrawerContext); // Toggle drawer\n\n  const toggleDrawer = () => {\n    dispatch({\n      type: \"TOGGLE\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MobileMenuWrapper, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      width: \"285px\",\n      placement: \"left\",\n      drawerHandler: /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this),\n      open: state.isOpen,\n      toggleHandler: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(DrawerContentWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHead, {\n          children: [/*#__PURE__*/_jsxDEV(DrawerLogo, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logo,\n                alt: \"logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DrawerClose, {\n            onClick: toggleDrawer,\n            children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          items: items,\n          className: \"mobile-menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MobileMenu;","map":{"version":3,"sources":["/home/frivolta/Sites/Apps/rivoltafilippo-next/components/Navbar/MobileMenu.tsx"],"names":["React","useContext","MobileMenuWrapper","DrawerContentWrapper","DrawerHead","DrawerLogo","DrawerClose","HamburgerIcon","FiX","Drawer","DrawerContext","Link","Menu","MobileMenu","items","logo","props","state","dispatch","toggleDrawer","type","isOpen"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,aANF,QAOO,gBAPP;AAQA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAOA,MAAMC,UAAoD,GAAG,UAIvD;AAAA,MAJwD;AAC5DC,IAAAA,KAD4D;AAE5DC,IAAAA;AAF4D,GAIxD;AAAA,MADDC,KACC;;AACJ,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BjB,UAAU,CAACS,aAAD,CAA3C,CADI,CAGJ;;AACA,QAAMS,YAAY,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,sBACE,QAAC,iBAAD,kCAAuBJ,KAAvB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,aAAa,eACX,QAAC,aAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAUE,MAAA,IAAI,EAAEC,KAAK,CAACI,MAVd;AAWE,MAAA,aAAa,EAAEF,YAXjB;AAAA,6BAaE,QAAC,oBAAD;AAAA,gCACE,QAAC,UAAD;AAAA,kCACE,QAAC,UAAD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,GAAX;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEJ,IAAV;AAAgB,gBAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEI,YAAtB;AAAA,mCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,KAAb;AAAoB,UAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA7CD;;AA+CA,eAAeD,UAAf","sourcesContent":["import React, { useContext } from \"react\"\r\nimport {\r\n  MobileMenuWrapper,\r\n  DrawerContentWrapper,\r\n  DrawerHead,\r\n  DrawerLogo,\r\n  DrawerClose,\r\n  HamburgerIcon,\r\n} from \"./navbar.style\"\r\nimport { FiX } from \"react-icons/fi\"\r\nimport Drawer from \"../Drawer/drawer\"\r\nimport { DrawerContext } from \"../Drawer/drawerContext\"\r\nimport Link from \"next/link\"\r\nimport Menu from \"./Menu\"\r\n\r\ntype MobileMenuProps = {\r\n  items: any\r\n  logo: string\r\n}\r\n\r\nconst MobileMenu: React.FunctionComponent<MobileMenuProps> = ({\r\n  items,\r\n  logo,\r\n  ...props\r\n}) => {\r\n  const { state, dispatch }: any = useContext(DrawerContext)\r\n\r\n  // Toggle drawer\r\n  const toggleDrawer = () => {\r\n    dispatch({\r\n      type: \"TOGGLE\",\r\n    })\r\n  }\r\n\r\n  return (\r\n    <MobileMenuWrapper {...props}>\r\n      <Drawer\r\n        width=\"285px\"\r\n        placement=\"left\"\r\n        drawerHandler={\r\n          <HamburgerIcon>\r\n            <span />\r\n            <span />\r\n            <span />\r\n          </HamburgerIcon>\r\n        }\r\n        open={state.isOpen}\r\n        toggleHandler={toggleDrawer}\r\n      >\r\n        <DrawerContentWrapper>\r\n          <DrawerHead>\r\n            <DrawerLogo>\r\n              <Link href=\"/\">\r\n                <img src={logo} alt=\"logo\" />\r\n              </Link>\r\n            </DrawerLogo>\r\n            <DrawerClose onClick={toggleDrawer}>\r\n              <FiX />\r\n            </DrawerClose>\r\n          </DrawerHead>\r\n          <Menu items={items} className=\"mobile-menu\" />\r\n        </DrawerContentWrapper>\r\n      </Drawer>\r\n    </MobileMenuWrapper>\r\n  )\r\n}\r\n\r\nexport default MobileMenu\r\n"]},"metadata":{},"sourceType":"module"}