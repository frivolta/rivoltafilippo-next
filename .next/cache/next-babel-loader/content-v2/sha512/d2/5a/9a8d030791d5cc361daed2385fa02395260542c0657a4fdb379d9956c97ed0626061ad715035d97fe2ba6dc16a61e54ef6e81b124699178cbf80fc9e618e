{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/frivolta/Sites/Apps/rivoltafilippo-next/components/PostCard/postCard.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { PostCardWrapper, PostPreview, PostDetails, PostDate, PostTitle, Excerpt, PostContent } from \"./postCard.style\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\n\nconst PostCard = (_ref) => {\n  let {\n    image,\n    title,\n    excerpt,\n    url,\n    date,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"image\", \"title\", \"excerpt\", \"url\", \"date\", \"className\"]);\n\n  // Add all classs to an array\n  const addAllClasses = [\"post_card\"]; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  const dateFormatter = date => {\n    const newDate = new Date(date);\n    const month = newDate.toLocaleString(\"en\", {\n      month: \"short\"\n    });\n    const year = newDate.toLocaleString(\"default\", {\n      year: \"numeric\"\n    });\n    return `${newDate.getDate()} <span>${month} <strong>${year}</strong></span>`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostCardWrapper, _objectSpread(_objectSpread({\n    className: addAllClasses.join(\" \")\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: url,\n      children: /*#__PURE__*/_jsxDEV(PostPreview, {\n        className: \"post_preview\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: image.url,\n          alt: \"post preview\",\n          layout: \"responsive\",\n          width: 1170,\n          height: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostDetails, {\n      className: \"post_details\",\n      children: [date && /*#__PURE__*/_jsxDEV(PostDate, {\n        dangerouslySetInnerHTML: {\n          __html: dateFormatter(date)\n        },\n        className: \"post_date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n        className: \"post_content\",\n        children: [/*#__PURE__*/_jsxDEV(PostTitle, {\n          className: \"post_title\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: url,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), excerpt ? /*#__PURE__*/_jsxDEV(Excerpt, {\n          dangerouslySetInnerHTML: {\n            __html: excerpt\n          },\n          className: \"excerpt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostCard;","map":{"version":3,"sources":["/home/frivolta/Sites/Apps/rivoltafilippo-next/components/PostCard/postCard.tsx"],"names":["React","PostCardWrapper","PostPreview","PostDetails","PostDate","PostTitle","Excerpt","PostContent","Link","Image","PostCard","image","title","excerpt","url","date","className","props","addAllClasses","push","dateFormatter","newDate","Date","month","toLocaleString","year","getDate","join","__html"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACEC,eADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,OANF,EAOEC,WAPF,QAQO,kBARP;AASA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAYA,MAAMC,QAAgD,GAAG,UAQnD;AAAA,MARoD;AACxDC,IAAAA,KADwD;AAExDC,IAAAA,KAFwD;AAGxDC,IAAAA,OAHwD;AAIxDC,IAAAA,GAJwD;AAKxDC,IAAAA,IALwD;AAMxDC,IAAAA;AANwD,GAQpD;AAAA,MADDC,KACC;;AACJ;AACA,QAAMC,aAAa,GAAG,CAAC,WAAD,CAAtB,CAFI,CAIJ;;AACA,MAAIF,SAAJ,EAAe;AACbE,IAAAA,aAAa,CAACC,IAAd,CAAmBH,SAAnB;AACD;;AAED,QAAMI,aAAa,GAAIL,IAAD,IAA0B;AAC9C,UAAMM,OAAO,GAAG,IAAIC,IAAJ,CAASP,IAAT,CAAhB;AACA,UAAMQ,KAAK,GAAGF,OAAO,CAACG,cAAR,CAAuB,IAAvB,EAA6B;AAAED,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAd;AACA,UAAME,IAAI,GAAGJ,OAAO,CAACG,cAAR,CAAuB,SAAvB,EAAkC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlC,CAAb;AACA,WAAQ,GAAEJ,OAAO,CAACK,OAAR,EAAkB,UAASH,KAAM,YAAWE,IAAK,kBAA3D;AACD,GALD;;AAOA,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAEP,aAAa,CAACS,IAAd,CAAmB,GAAnB;AAA5B,KAAyDV,KAAzD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,GAAZ;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,GAAG,EAAEH,KAAK,CAACG,GADb;AAEE,UAAA,GAAG,EAAC,cAFN;AAGE,UAAA,MAAM,EAAC,YAHT;AAIE,UAAA,KAAK,EAAE,IAJT;AAKE,UAAA,MAAM,EAAE;AALV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA,iBACGC,IAAI,iBACH,QAAC,QAAD;AACE,QAAA,uBAAuB,EAAE;AACvBa,UAAAA,MAAM,EAAER,aAAa,CAACL,IAAD;AADE,SAD3B;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eASE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,YAArB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAED,GAAZ;AAAA,sBAAkBF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGC,OAAO,gBACN,QAAC,OAAD;AACE,UAAA,uBAAuB,EAAE;AACvBe,YAAAA,MAAM,EAAEf;AADe,WAD3B;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADM,GAOJ,IAXN;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA/DD;;AAiEA,eAAeH,QAAf","sourcesContent":["import * as React from \"react\"\r\nimport _ from \"lodash\"\r\nimport {\r\n  PostCardWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostDate,\r\n  PostTitle,\r\n  Excerpt,\r\n  PostContent,\r\n} from \"./postCard.style\"\r\nimport Link from \"next/link\"\r\nimport Image from \"next/image\"\r\nimport { CoverImage } from \"../../types/coverImage\"\r\n\r\ninterface PostCardProps {\r\n  image: CoverImage\r\n  title: string\r\n  excerpt?: string\r\n  url: string\r\n  date?: string\r\n  className?: string\r\n}\r\n\r\nconst PostCard: React.FunctionComponent<PostCardProps> = ({\r\n  image,\r\n  title,\r\n  excerpt,\r\n  url,\r\n  date,\r\n  className,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = [\"post_card\"]\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className)\r\n  }\r\n\r\n  const dateFormatter = (date: string): string => {\r\n    const newDate = new Date(date)\r\n    const month = newDate.toLocaleString(\"en\", { month: \"short\" })\r\n    const year = newDate.toLocaleString(\"default\", { year: \"numeric\" })\r\n    return `${newDate.getDate()} <span>${month} <strong>${year}</strong></span>`\r\n  }\r\n\r\n  return (\r\n    <PostCardWrapper className={addAllClasses.join(\" \")} {...props}>\r\n      <Link href={url}>\r\n        <PostPreview className=\"post_preview\">\r\n          <Image\r\n            src={image.url}\r\n            alt=\"post preview\"\r\n            layout=\"responsive\"\r\n            width={1170}\r\n            height={500}\r\n          />\r\n        </PostPreview>\r\n      </Link>\r\n\r\n      <PostDetails className=\"post_details\">\r\n        {date && (\r\n          <PostDate\r\n            dangerouslySetInnerHTML={{\r\n              __html: dateFormatter(date),\r\n            }}\r\n            className=\"post_date\"\r\n          />\r\n        )}\r\n        <PostContent className=\"post_content\">\r\n          <PostTitle className=\"post_title\">\r\n            <Link href={url}>{title}</Link>\r\n          </PostTitle>\r\n          {excerpt ? (\r\n            <Excerpt\r\n              dangerouslySetInnerHTML={{\r\n                __html: excerpt,\r\n              }}\r\n              className=\"excerpt\"\r\n            />\r\n          ) : null}\r\n        </PostContent>\r\n      </PostDetails>\r\n    </PostCardWrapper>\r\n  )\r\n}\r\n\r\nexport default PostCard\r\n"]},"metadata":{},"sourceType":"module"}