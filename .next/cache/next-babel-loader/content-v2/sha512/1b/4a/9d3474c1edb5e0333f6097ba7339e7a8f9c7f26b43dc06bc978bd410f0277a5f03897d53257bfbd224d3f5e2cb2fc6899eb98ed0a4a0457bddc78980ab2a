{"ast":null,"code":"import _defineProperty from \"/home/frivolta/Sites/Apps/rivoltafilippo-next/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/frivolta/Sites/Apps/rivoltafilippo-next/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/frivolta/Sites/Apps/rivoltafilippo-next/components/Navbar/MobileMenu.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport { MobileMenuWrapper, DrawerContentWrapper, DrawerHead, DrawerLogo, DrawerClose, HamburgerIcon } from \"./navbar.style\";\nimport { FiX } from \"react-icons/fi\";\nimport Drawer from \"../Drawer/drawer\";\nimport { DrawerContext } from \"../Drawer/drawerContext\";\nimport Link from \"next/link\";\nimport Menu from \"./Menu\";\n\nvar MobileMenu = function MobileMenu(_ref) {\n  _s();\n\n  var items = _ref.items,\n      logo = _ref.logo,\n      props = _objectWithoutProperties(_ref, [\"items\", \"logo\"]);\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch; // Toggle drawer\n\n\n  var toggleDrawer = function toggleDrawer() {\n    dispatch({\n      type: \"TOGGLE\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MobileMenuWrapper, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      width: \"285px\",\n      placement: \"left\",\n      drawerHandler: /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, _this),\n      open: state.isOpen,\n      toggleHandler: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(DrawerContentWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHead, {\n          children: [/*#__PURE__*/_jsxDEV(DrawerLogo, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logo,\n                alt: \"logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(DrawerClose, {\n            onClick: toggleDrawer,\n            children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Menu, {\n          items: items,\n          className: \"mobile-menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MobileMenu, \"sF0VZZI1/hzQg6vJI3rJ+xxHIgo=\");\n\n_c = MobileMenu;\nexport default MobileMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileMenu\");","map":{"version":3,"sources":["/home/frivolta/Sites/Apps/rivoltafilippo-next/components/Navbar/MobileMenu.tsx"],"names":["React","useContext","MobileMenuWrapper","DrawerContentWrapper","DrawerHead","DrawerLogo","DrawerClose","HamburgerIcon","FiX","Drawer","DrawerContext","Link","Menu","MobileMenu","items","logo","props","state","dispatch","toggleDrawer","type","isOpen"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,aANF,QAOO,gBAPP;AAQA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAOA,IAAMC,UAAoD,GAAG,SAAvDA,UAAuD,OAIvD;AAAA;;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADDC,KACC;;AAAA,oBAC6Bf,UAAU,CAACS,aAAD,CADvC;AAAA,MACIO,KADJ,eACIA,KADJ;AAAA,MACWC,QADX,eACWA,QADX,EAGJ;;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,sBACE,QAAC,iBAAD,kCAAuBJ,KAAvB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,aAAa,eACX,QAAC,aAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ;AAUE,MAAA,IAAI,EAAEC,KAAK,CAACI,MAVd;AAWE,MAAA,aAAa,EAAEF,YAXjB;AAAA,6BAaE,QAAC,oBAAD;AAAA,gCACE,QAAC,UAAD;AAAA,kCACE,QAAC,UAAD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,GAAX;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEJ,IAAV;AAAgB,gBAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEI,YAAtB;AAAA,mCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAWE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,KAAb;AAAoB,UAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA+BD,CA7CD;;GAAMD,U;;KAAAA,U;AA+CN,eAAeA,UAAf","sourcesContent":["import React, { useContext } from \"react\"\r\nimport {\r\n  MobileMenuWrapper,\r\n  DrawerContentWrapper,\r\n  DrawerHead,\r\n  DrawerLogo,\r\n  DrawerClose,\r\n  HamburgerIcon,\r\n} from \"./navbar.style\"\r\nimport { FiX } from \"react-icons/fi\"\r\nimport Drawer from \"../Drawer/drawer\"\r\nimport { DrawerContext } from \"../Drawer/drawerContext\"\r\nimport Link from \"next/link\"\r\nimport Menu from \"./Menu\"\r\n\r\ntype MobileMenuProps = {\r\n  items: any\r\n  logo: string\r\n}\r\n\r\nconst MobileMenu: React.FunctionComponent<MobileMenuProps> = ({\r\n  items,\r\n  logo,\r\n  ...props\r\n}) => {\r\n  const { state, dispatch }: any = useContext(DrawerContext)\r\n\r\n  // Toggle drawer\r\n  const toggleDrawer = () => {\r\n    dispatch({\r\n      type: \"TOGGLE\",\r\n    })\r\n  }\r\n\r\n  return (\r\n    <MobileMenuWrapper {...props}>\r\n      <Drawer\r\n        width=\"285px\"\r\n        placement=\"left\"\r\n        drawerHandler={\r\n          <HamburgerIcon>\r\n            <span />\r\n            <span />\r\n            <span />\r\n          </HamburgerIcon>\r\n        }\r\n        open={state.isOpen}\r\n        toggleHandler={toggleDrawer}\r\n      >\r\n        <DrawerContentWrapper>\r\n          <DrawerHead>\r\n            <DrawerLogo>\r\n              <Link href=\"/\">\r\n                <img src={logo} alt=\"logo\" />\r\n              </Link>\r\n            </DrawerLogo>\r\n            <DrawerClose onClick={toggleDrawer}>\r\n              <FiX />\r\n            </DrawerClose>\r\n          </DrawerHead>\r\n          <Menu items={items} className=\"mobile-menu\" />\r\n        </DrawerContentWrapper>\r\n      </Drawer>\r\n    </MobileMenuWrapper>\r\n  )\r\n}\r\n\r\nexport default MobileMenu\r\n"]},"metadata":{},"sourceType":"module"}